# -*- coding: utf-8 -*-
"""interfaz

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UDkBXO6Sdx-9WyEVr33kjURq3aSP4fIe
"""

import streamlit as st
import pandas as pd
import os
from gif_generator import generate_gif
from drive_utils import download_csv_by_date
from datetime import datetime

# Carpeta temporal local para guardar GIFs
TMP_DIR = "/tmp"
os.makedirs(TMP_DIR, exist_ok=True)

st.set_page_config(page_title="Calidad del Aire BogotÃ¡", layout="wide")
st.title("ðŸŒ¿ Calidad del Aire en BogotÃ¡")

# --- SELECCIÃ“N DE FECHA ---
fecha = st.date_input("Selecciona la fecha", value=pd.to_datetime("today"))

# --- SELECCIÃ“N DE CONTAMINANTE ---
contaminantes = ["PM2.5", "NO2", "O3"]  # Ajusta segÃºn tus columnas reales
contaminante = st.selectbox("Selecciona el contaminante", contaminantes)

# --- BOTÃ“N PARA GENERAR GIF ---
if st.button("Generar GIF"):
    with st.spinner("Generando GIF..."):
        try:
            # Descargar datos de Drive
            df_air = download_csv_by_date(fecha, "aire")
            df_met = download_csv_by_date(fecha, "meteorologicos")
        except Exception as e:
            st.error(f"No se pudieron descargar los datos: {e}")
            st.stop()

        if df_air.empty or df_met.empty:
            st.warning("No hay datos disponibles para esta fecha.")
            st.stop()

        # Nombre de archivo para el GIF
        fecha_str = fecha.strftime("%Y-%m-%d")
        out_gif_path = os.path.join(TMP_DIR, f"GIF_{contaminante}_{fecha_str}.gif")

        # Generar el GIF usando tu funciÃ³n
        try:
            gif_path, df_used = generate_gif(df_air, df_met, contaminante, out_gif_path)
        except Exception as e:
            st.error(f"Error generando el GIF: {e}")
            st.stop()

        # --- MOSTRAR RESULTADOS ---
        st.success("GIF generado correctamente âœ…")
        st.image(gif_path, caption=f"{contaminante} - {fecha_str}")

        # BotÃ³n para descargar el GIF
        with open(gif_path, "rb") as f:
            st.download_button(
                label="ðŸ“¥ Descargar GIF",
                data=f,
                file_name=f"GIF_{contaminante}_{fecha_str}.gif",
                mime="image/gif"
            )

        # BotÃ³n para descargar los datos utilizados
        csv_bytes = df_used.to_csv(index=False).encode('utf-8')
        st.download_button(
            label="ðŸ“¥ Descargar datos utilizados (CSV)",
            data=csv_bytes,
            file_name=f"Datos_{contaminante}_{fecha_str}.csv",
            mime="text/csv"
        )